{"ast":null,"code":"var _jsxFileName = \"/Users/zhangqian/Downloads/ticketing-page/ticketing-page/src/Components/ETicket/Eticket.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport QRCode from 'qrcode.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet eventId;\nlet imgUrl;\nexport default function ETicket(props) {\n  _s();\n\n  const [isLoading, setLoading] = useState(true);\n  const [orderData, setData] = useState();\n  eventId = props.location.search.slice(4);\n  useEffect(() => {\n    axios.get(\"../sportsEvents.json\").then(response => {\n      for (let n in response.data) {\n        var ids = response.data[n].eventId;\n\n        if (eventId == ids) {\n          console.log(1);\n          setData(response.data[n]);\n          setLoading(false);\n        }\n      }\n\n      console.log(orderData);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(QRCode, {\n      value: \"https://www.baidu.com/\" // 生成二维码的内容\n      ,\n      size: 300 // 二维码的大小\n      ,\n      fgColor: \"#000000\" // 二维码的颜色\n      // imageSettings={{ // 中间有图片logo\n      //     src:{orderData.eventImg},\n      //     height: 60,\n      //     width: 60,\n      //     excavate: true\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ETicket, \"JXc9zSUg4gn3NZ3Z4sO70Dm71so=\");\n\n_c = ETicket;\n\nvar _c;\n\n$RefreshReg$(_c, \"ETicket\");","map":{"version":3,"sources":["/Users/zhangqian/Downloads/ticketing-page/ticketing-page/src/Components/ETicket/Eticket.jsx"],"names":["React","useEffect","useState","axios","QRCode","eventId","imgUrl","ETicket","props","isLoading","setLoading","orderData","setData","location","search","slice","get","then","response","n","data","ids","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,IAAIC,OAAJ;AACA,IAAIC,MAAJ;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAAA;;AAClC,QAAM,CAACC,SAAD,EAAWC,UAAX,IAAyBR,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACS,SAAD,EAAWC,OAAX,IAAsBV,QAAQ,EAApC;AACAG,EAAAA,OAAO,GAAGG,KAAK,CAACK,QAAN,CAAeC,MAAf,CAAsBC,KAAtB,CAA4B,CAA5B,CAAV;AACAd,EAAAA,SAAS,CAAC,MAAI;AACVE,IAAAA,KAAK,CAACa,GAAN,CAAU,sBAAV,EAAmCC,IAAnC,CAAwCC,QAAQ,IAAG;AAC/C,WAAI,IAAIC,CAAR,IAAaD,QAAQ,CAACE,IAAtB,EAA4B;AACxB,YAAIC,GAAG,GAAGH,QAAQ,CAACE,IAAT,CAAcD,CAAd,EAAiBd,OAA3B;;AACA,YAAIA,OAAO,IAAIgB,GAAf,EAAmB;AACfC,UAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACAX,UAAAA,OAAO,CAACM,QAAQ,CAACE,IAAT,CAAcD,CAAd,CAAD,CAAP;AACAT,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ;;AACDY,MAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AAEH,KAXD;AAYH,GAbQ,EAaP,EAbO,CAAT;;AAcA,MAAIF,SAAJ,EAAc;AACV,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,sBACI;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,KAAK,EAAC,wBADV,CACkC;AADlC;AAEI,MAAA,IAAI,EAAE,GAFV,CAEe;AAFf;AAGI,MAAA,OAAO,EAAC,SAHZ,CAGsB;AAClB;AACA;AACA;AACA;AACA;AACA;;AATJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAvCuBF,O;;KAAAA,O","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport QRCode from 'qrcode.react';\n\nlet eventId;\nlet imgUrl;\nexport default function ETicket(props){\n    const [isLoading,setLoading] = useState(true);\n    const [orderData,setData] = useState();\n    eventId = props.location.search.slice(4);\n    useEffect(()=>{\n        axios.get(\"../sportsEvents.json\",).then(response =>{\n            for(let n in response.data) {\n                var ids = response.data[n].eventId;\n                if (eventId == ids){\n                    console.log(1);\n                    setData(response.data[n]);\n                    setLoading(false);\n                }\n            }\n            console.log(orderData);\n\n        });\n    },[])\n    if (isLoading){\n        return(\n            <div>loading</div>\n        )\n    }\n\n    return(\n        <div>\n            <QRCode\n                value='https://www.baidu.com/'// 生成二维码的内容\n                size={300} // 二维码的大小\n                fgColor=\"#000000\" // 二维码的颜色\n                // imageSettings={{ // 中间有图片logo\n                //     src:{orderData.eventImg},\n                //     height: 60,\n                //     width: 60,\n                //     excavate: true\n                // }}\n            />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}